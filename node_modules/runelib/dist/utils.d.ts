/// <reference types="node" />
/**
 * Prepends a '0' to an odd character length word to ensure it has an even number of characters.
 * @param {string} word - The input word.
 * @returns {string} - The word with a leading '0' if it's an odd character length; otherwise, the original word.
 */
export declare const zero2: (word: string) => string;
/**
 * Converts an array of numbers to a hexadecimal string representation.
 * @param {number[]} msg - The input array of numbers.
 * @returns {string} - The hexadecimal string representation of the input array.
 */
export declare const toHex: (msg: number[]) => string;
export declare function chunks<T>(bin: T[], chunkSize: number): T[][];
export declare function toPushData(data: Buffer): Buffer;
